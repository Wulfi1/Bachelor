
// Transition IDs in sampling order
var idList = ["Activity_1peodm0","Activity_10wqleg","Activity_09n14ux","Activity_07yj2ya"];

// Probabilities map (default 1)
var probMap = { "Activity_10wqleg":0.8,"Activity_07yj2ya":0.2 };
var probabilities = map(function(id) { return probMap[id] != null ? probMap[id] : 1; }, idList);

// Time interval maps and sampled durations
var timeMinMap = { "Activity_1peodm0":10.0,"Activity_10wqleg":20.0,"Activity_09n14ux":30.0,"Activity_07yj2ya":15.0 };
var timeMaxMap = { "Activity_1peodm0":20.0,"Activity_10wqleg":40.0,"Activity_09n14ux":60.0,"Activity_07yj2ya":30.0 };
var durations   = map(function(id) { 
    var mn = timeMinMap[id], mx = timeMaxMap[id]; 
    return (typeof mn === 'number' && typeof mx === 'number') 
           ? uniform(mn, mx) 
           : 0; 
}, idList);

// Store globally
globalStore.idList        = idList;
globalStore.probabilities = probabilities;
globalStore.durations    = durations;

var init = function(){
globalStore.countEnabled = 0;
globalStore.trace = "";
globalStore.sink = 0;
globalStore.exi_Gateway_0dwauce = 0;
globalStore.ent_Gateway_19qbfig = 0;
globalStore.source = 1;

globalStore.enabled_Activity_1peodm0 = false; // t1:  10-20 min
globalStore.enabled_Activity_10wqleg = false; // t3:  20-40 min
globalStore.enabled_Activity_09n14ux = false; // t4:  30-60 min
globalStore.enabled_Activity_07yj2ya = false; // t2:  15-30 min

globalStore.fired_Activity_1peodm0 = 0;
globalStore.fired_Activity_10wqleg = 0;
globalStore.fired_Activity_09n14ux = 0;
globalStore.fired_Activity_07yj2ya = 0;

globalStore.vars = {  };

}

var update_enabled_Activity_1peodm0 = function() {
if(globalStore.source > 0) {
if (!globalStore.enabled_Activity_1peodm0) {
globalStore.enabled_Activity_1peodm0 = true;
globalStore.countEnabled = globalStore.countEnabled + 1;
}
} else {
if (globalStore.enabled_Activity_1peodm0) {
globalStore.enabled_Activity_1peodm0 = false;
globalStore.countEnabled = globalStore.countEnabled - 1;
}
}
}

var update_enabled_Activity_10wqleg = function() {
if(globalStore.exi_Gateway_0dwauce > 0) {
if (!globalStore.enabled_Activity_10wqleg) {
globalStore.enabled_Activity_10wqleg = true;
globalStore.countEnabled = globalStore.countEnabled + 1;
}
} else {
if (globalStore.enabled_Activity_10wqleg) {
globalStore.enabled_Activity_10wqleg = false;
globalStore.countEnabled = globalStore.countEnabled - 1;
}
}
}

var update_enabled_Activity_09n14ux = function() {
if(globalStore.ent_Gateway_19qbfig > 0) {
if (!globalStore.enabled_Activity_09n14ux) {
globalStore.enabled_Activity_09n14ux = true;
globalStore.countEnabled = globalStore.countEnabled + 1;
}
} else {
if (globalStore.enabled_Activity_09n14ux) {
globalStore.enabled_Activity_09n14ux = false;
globalStore.countEnabled = globalStore.countEnabled - 1;
}
}
}

var update_enabled_Activity_07yj2ya = function() {
if(globalStore.exi_Gateway_0dwauce > 0) {
if (!globalStore.enabled_Activity_07yj2ya) {
globalStore.enabled_Activity_07yj2ya = true;
globalStore.countEnabled = globalStore.countEnabled + 1;
}
} else {
if (globalStore.enabled_Activity_07yj2ya) {
globalStore.enabled_Activity_07yj2ya = false;
globalStore.countEnabled = globalStore.countEnabled - 1;
}
}
}


var fire_Activity_1peodm0 = function() {
globalStore.source = globalStore.source - 1;
globalStore.exi_Gateway_0dwauce = globalStore.exi_Gateway_0dwauce + 1;

globalStore.fired_Activity_1peodm0 = globalStore.fired_Activity_1peodm0 + 1;



update_enabled_Activity_07yj2ya();
update_enabled_Activity_10wqleg();
update_enabled_Activity_1peodm0();
}


var fire_Activity_10wqleg = function() {
globalStore.exi_Gateway_0dwauce = globalStore.exi_Gateway_0dwauce - 1;
globalStore.ent_Gateway_19qbfig = globalStore.ent_Gateway_19qbfig + 1;

globalStore.fired_Activity_10wqleg = globalStore.fired_Activity_10wqleg + 1;



update_enabled_Activity_10wqleg();
update_enabled_Activity_07yj2ya();
update_enabled_Activity_09n14ux();
}


var fire_Activity_09n14ux = function() {
globalStore.ent_Gateway_19qbfig = globalStore.ent_Gateway_19qbfig - 1;
globalStore.sink = globalStore.sink + 1;

globalStore.fired_Activity_09n14ux = globalStore.fired_Activity_09n14ux + 1;



update_enabled_Activity_09n14ux();
}


var fire_Activity_07yj2ya = function() {
globalStore.exi_Gateway_0dwauce = globalStore.exi_Gateway_0dwauce - 1;
globalStore.ent_Gateway_19qbfig = globalStore.ent_Gateway_19qbfig + 1;

globalStore.fired_Activity_07yj2ya = globalStore.fired_Activity_07yj2ya + 1;



update_enabled_Activity_10wqleg();
update_enabled_Activity_07yj2ya();
update_enabled_Activity_09n14ux();
}


var getXMLtag = function (type) {
if (type.includes("Double")) {
return "float";
} else if (type.includes("Integer")) {
return "integer";
} else if (type.includes("Boolean")) {
return "boolean";
}
return "string";
}

var log_transition = function(transition) {
if (transition !== "None") {
globalStore.xesOutput += "<event>\n";
globalStore.xesOutput +=  "<string key=\"concept:name\" value=\"" + transition + "\"/>\n";
globalStore.xesOutput += "<string key=\"totalTime\" value=\"" + globalStore.totalTime + "\"/>\n";
globalStore.trace += globalStore.xesOutput;
}
};

var simulator_loop = function(steps) {

globalStore.xesOutput = "";

globalStore.totalTime = 0;

var enabledTransitions = filter(function(x) {
return (x == 0 && globalStore.enabled_Activity_1peodm0)||
(x == 1 && globalStore.enabled_Activity_10wqleg)||
(x == 2 && globalStore.enabled_Activity_09n14ux)||
(x == 3 && globalStore.enabled_Activity_07yj2ya);
}, [0, 1, 2, 3]);

if (globalStore.sink > 0) {
  log_transition("End");
  return;
}

if (steps <= 0) {
  log_transition("Stuck");
  return;
}

if (enabledTransitions.length == 0) {
  log_transition("Stuck");
  return;
}

// build weight vector for enabled transitions
var weights = map(function(i) {
  var p = globalStore.probabilities[i];
  return (typeof p === 'number') ? p : 1;
}, enabledTransitions);

// compute total weight via reduce (no for‐loops in WebPPL)
var totalWeight = reduce(function(acc, w) {
  return acc + w;
}, 0, weights);

// normalize weights into a probability vector ps
var ps = map(function(w) {
  return w / totalWeight;
}, weights);

// debug print—uncomment if you need to inspect
// console.log('enabled=', enabledTransitions, 'weights=', weights, 'ps=', ps);

var transition = sample(Categorical({ vs: enabledTransitions, ps: ps }));



var dur = globalStore.durations[transition];
globalStore.totalTime = (globalStore.totalTime || 0) + dur;if (transition == 0) {
  log_transition("t1:  10-20 min");
  fire_Activity_1peodm0();
}
else if (transition == 1) {
  log_transition("t3:  20-40 min");
  fire_Activity_10wqleg();
}
else if (transition == 2) {
  log_transition("t4:  30-60 min");
  fire_Activity_09n14ux();
}
else if (transition == 3) {
  log_transition("t2:  15-30 min");
  fire_Activity_07yj2ya();
}
else {
  console.log("Selected illegal transition; should never happen.");
}
simulator_loop(steps - 1);
}

var simulator = function(){
init();
update_enabled_Activity_1peodm0();
update_enabled_Activity_10wqleg();
update_enabled_Activity_09n14ux();
update_enabled_Activity_07yj2ya();

globalStore.trace += "<trace>\n";

simulator_loop(10);

globalStore.trace += "</trace>\n";

console.log(globalStore.trace);

return;
}

var dist = Infer({
method: 'forward', 
samples: 100,
},simulator);

